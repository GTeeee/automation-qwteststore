cart = require('../pages/cart.page.js')
signInPage = require('../pages/signIn.page.js')
productPage = require('../pages/product.page.js')

describe('Checkout items in cart ', function(){
    it('should checkout selected items as a guest ', async () => {
        await browser.url(`${browser.options.baseUrl}`)
        await productPage.seeSingleItem(1)
        await productPage.addItemToCart()
        await productPage.shoppingCartSuccess.waitForExist()
        //browser.pause(50000)
        await browser.url(`${browser.options.baseUrl}/cart`)
        let totalText = cart.subTotalInCart.getText()
        //await browser.pause(5000) //pause
        await cart.clickCheckoutButton()
        await browser.pause(5000) //pause
        await cart.iframe.waitForExist()
        //assert.equal(true, await cart.iframe.isDisplayed())
/*      const iframe = await $('stripe_checkout_app')
        console.log(iframe) */
        await browser.switchToFrame(0)
        //assert.equal('Gatsby Store', await cart.checkoutHeader.getText())
        await cart.emailField.waitForExist()
        await cart.sendEmail('test@test.com')
        //console.log(totalText)
        await cart.sendName('Test')
        await cart.sendStreetAddress('TestStreet')
        //await cart.countryDropdown.waitForExist()
        await cart.sendCity('TestCity')
        await cart.getJamaicaDropdown()
        await cart.clickPayButton()
        await cart.cardNumber.waitForExist()
        await browser.execute("$('input#card_number').val('4242 4242 4242 4242');")
        await browser.execute("$('input#cc-exp').val('04/22');")
        await browser.execute("$('input#cc-csc').val('529');")
        await cart.clickPayButton()
        await cart.successButton.waitForExist()
        expect(cart.successButton).to.be.displayed
        await browser.switchToParentFrame()
        //await browser.pause(10000)
        //await cart.paymentMessage.waitForExist()
        //assert.equal(`Your placed!/nCongratulations. Your order and payment has been accepted.`, await cart.paymentMessage.getText())
        //expect(cart.paymentMessage).to.contain('Congratulations')
    })
    it('should checkout selected items as an authenticated user ', async () =>{
        await browser.url(`${browser.options.baseUrl}/login`)
        await signInPage.addEmailToField('desk@desk.com')
        await signInPage.addPasswordToField('desk1')
        await signInPage.clickLoginButton()
        await browser.url(`${browser.options.baseUrl}`)
        await productPage.seeSingleItem(2)
        await productPage.addItemToCart()
        await browser.url(`${browser.options.baseUrl}/cart`)
        await cart.clickCheckoutButton()
        await browser.switchToFrame(0)
        await cart.emailField.waitForExist()
        await cart.sendEmail('test@test.com')
        await cart.sendName('Test')
        await cart.sendStreetAddress('TestStreet')
        await cart.sendCity('TestCity')
        //await cart.sendZipcodeText('testzip')
        await cart.getJamaicaDropdown()
        await cart.clickPayButton()
        await cart.cardNumber.waitForExist()
        await browser.execute("$('input#card_number').val('4242 4242 4242 4242');")
        await browser.execute("$('input#cc-exp').val('04/22');")
        await browser.execute("$('input#cc-csc').val('549');")
        await cart.clickPayButton()
        await cart.successButton.waitForExist()
        expect(cart.successButton).to.be.displayed
        await browser.switchToParentFrame()
        //await cart.paymentMessage.waitForExist()
        //assert.equal("Your placed!/nCongratulations. Your order and payment has been accepted.", await cart.paymentMessage())
    })

})